Script started on Sun 20 Sep 2020 06:44:28 PM CST
a049854[22]% make clean
rm -f *.o demo core.*
a049854[23]% make
gcc   -c -ggdb main.c
gcc   -c -ggdb functions.c
gcc   main.o functions.o -o demo
a049854[24]% make clean[14Gexec /home/hercules/p/panli200/cs330/lab2/demo[16Git[Krm -r BAK[14Gls ugly/[K[14Gcp -r BAK ugly[K[K[K[K[K[K[K[K[K[K[Kvalgrind --leak-check=yes demop[K
==23284== Memcheck, a memory error detector
==23284== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==23284== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==23284== Command: demo
==23284== 
How big is the array?50
min value in array is: 1
==23284== 
==23284== HEAP SUMMARY:
==23284==     in use at exit: 200 bytes in 1 blocks
==23284==   total heap usage: 1 allocs, 0 frees, 200 bytes allocated
==23284== 
==23284== LEAK SUMMARY:
==23284==    definitely lost: 0 bytes in 0 blocks
==23284==    indirectly lost: 0 bytes in 0 blocks
==23284==      possibly lost: 0 bytes in 0 blocks
==23284==    still reachable: 200 bytes in 1 blocks
==23284==         suppressed: 0 bytes in 0 blocks
==23284== Reachable blocks (those to which a pointer was found) are not shown.
==23284== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23284== 
==23284== For counts of detected and suppressed errors, rerun with: -v
==23284== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
a049854[25]% gdb demo
[?1034hGNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-115.el7
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-redhat-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /home/hercules/p/panli200/cs330/lab2/demo...done.
(gdb) break functions.c:findAndReturnMin
Breakpoint 1 at 0x4008b3: file functions.c, line 44.
(gdb) run
Starting program: /home/hercules/p/panli200/cs330/lab2/demo 
How big is the array?50

Breakpoint 1, findAndReturnMin (array=0x602010, length=50, min=0x7fffffffdef4)
    at functions.c:44
44	    *min = array [0];
(gdb) print *min[K[K[K[K[K array[0]@length
$1 = {140, 227, 131, 431, 192, 98, 469, 273, 131, 331, 47, 482, 286, 161, 442, 256, 139, 17, 
  115, 98, 247, 166, 411, 432, 383, 102, 269, 53, 10, 277, 264, 1, 355, 395, 283, 399, 344, 
  103, 23, 474, 434, 422, 307, 71, 434, 100, 178, 73, 468, 292}
(gdb) print *min
$2 = 9999
(gdb) next
45	    for (i = 0; i < length; i ++)
(gdb) nextprint *min
$3 = 140
(gdb) print *min[C[C[C[C[C[C[6Pnext
47	        if (*min > array [i])
(gdb) nextprint *min
$4 = 140
(gdb) print *min[C[C[C[C[C[C[6Pnext
45	    for (i = 0; i < length; i ++)
(gdb) nextprint *min
$5 = 140
(gdb) print *min[C[C[C[C[C[C[6Pnext
47	        if (*min > array [i])
(gdb) nextprint *min
$6 = 140
(gdb) print *min[C[C[C[C[C[C[6Pnext
45	    for (i = 0; i < length; i ++)
(gdb) nextprint *min
$7 = 140
(gdb) print *min[C[C[C[C[C[C[6Pnext
47	        if (*min > array [i])
(gdb) nextprint *min
$8 = 140
(gdb) print *min[C[C[C[C[C[C[6Pnext
49	            *min = array [i];
(gdb) nextprint *min
$9 = 140
(gdb) print *min[C[C[C[C[C[C[6Pnext
45	    for (i = 0; i < length; i ++)
(gdb) nextprint *min
$10 = 131
(gdb) until
53	    return 0;
(gdb) print *min
$11 = 1
(gdb) next
54	}
(gdb) next
main (argc=1, argv=0x7fffffffdfe8) at main.c:27
27	    printf ("min value in array is: %d\n",min);
(gdb) next
min value in array is: 1
29	    exit (0);
(gdb) next
[Inferior 1 (process 23337) exited normally]
(gdb) quit
a049854[26]% exit
exit

Script done on Sun 20 Sep 2020 06:49:09 PM CST
